#include <stdio.h>

int V[3], vet[3];

void merge(p, q, r){
	int i = 0, k = 0, ini = 0, fim = 0;

	for(i = p; i < q; i++)
		vet[k++] = V[i];
		
	for(i = r - p; i >= q; i--)
		vet[k++] = V[i];

	ini = 0;
	fim = k - 1;
	
	for(i = p; i < r; i++){
		printf("{%d %d}", ini, fim);
		if(vet[ini] <= vet[fim])
			V[i] = vet[ini++];
		else
			V[i] = vet[fim--];
	}
	
	printf("\n[");
	for(i = p; i < r; i++)printf("%d, ", V[i]);
	printf("]\n");
	
	printf("\n");
}

void mergesort(int p, int r){
	if(p >= r - 1)
		return;
	
	int meio = (p + r) / 2;
	
	mergesort(p, meio);
	mergesort(meio, r);
	
	printf("%d %d %d\n", p, meio, r);
	
	merge(p, meio, r);
}

int main(){
	
	int i = 0;
	
	for(i = 0; i < 3; i++)
		V[i] = i;
		
	mergesort(0, 3);
	
	for(i = 0; i < 3; i++)
		printf("%d ", V[i]);
	
	printf("\n");
	
	return 0;
	
	int n = 0, aaai = 0, j = 0, r = 0, tend = 0, qt = 0, ax = 0, R = 0;
	
	while(1){
	
		scanf("%d", &n);
		getchar();
		
		if(!n)
			break;
		
		tend = 0;
		qt = 0;
		R = 0;
		ax = 0;
		
		for(i = 0; i < n; i++){
			scanf("%d", &r);
			getchar();
			r--;
			
			ax = i - r;
			
			if(ax){
				R += abs(ax) - tend;
				qt++;
				
				if(ax < 0)
					tend++;
				else
					tend--;
				
			}else if(tend){
				R += qt;
				qt++;
				
				if(tend > 0)
					tend--;
				else
					tend++;
			}
			
		}
		
		printf("%d\n", R);
		//printf(R % 2 == 0 ? "Carlos\n" : "Marcelo\n");
		
	}

	return 0;
}
